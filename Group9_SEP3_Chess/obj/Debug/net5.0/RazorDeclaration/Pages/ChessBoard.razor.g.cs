// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Group9_SEP3_Chess.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Group9_SEP3_Chess;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\_Imports.razor"
using Group9_SEP3_Chess.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\Pages\ChessBoard.razor"
using Group9_SEP3_Chess.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\Pages\ChessBoard.razor"
using Group9_SEP3_Chess.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\Pages\ChessBoard.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
    public partial class ChessBoard : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 95 "D:\CSharp\Group9_SEP3\Group9_SEP3_Chess\Pages\ChessBoard.razor"
       
    private ChessPiece[,] chessPieces = new ChessPiece[8, 8];
    String printoutArray = "";
    String UpgradeSelected = "";

    protected override async Task OnInitializedAsync()
    {
        string black = "Black";
        chessPieces[0, 0] = new ChessPiece()
        {
            Type = "rook",
            Color = black
        };
        chessPieces[0, 1] = new ChessPiece()
        {
            Type = "Knight",
            Color = black
        };
        chessPieces[0, 2] = new ChessPiece()
        {
            Type = "bishop",
            Color = black
        };
        chessPieces[0, 3] = new ChessPiece()
        {
            Type = "queen",
            Color = black
        };
        chessPieces[0, 4] = new ChessPiece()
        {
            Type = "king",
            Color = black
        };
        chessPieces[0, 5] = new ChessPiece()
        {
            Type = "bishop",
            Color = black
        };
        chessPieces[0, 6] = new ChessPiece()
        {
            Type = "Knight",
            Color = black
        };
        chessPieces[0, 7] = new ChessPiece()
        {
            Type = "rook",
            Color = black
        };
        
        for (int i = 0; i < chessPieces.GetLength(1); i++)
        {
            chessPieces[1, i] = new ChessPiece()
            {
                Type = "pawn",
                Color = black
            };
        }
        string white = "White";
        chessPieces[7, 0] = new ChessPiece()
        {
            Type = "rook",
            Color = white
        };
        chessPieces[7, 1] = new ChessPiece()
        {
            Type = "Knight",
            Color = white
        };
        chessPieces[7, 2] = new ChessPiece()
        {
            Type = "bishop",
            Color = white
        };
        chessPieces[7, 3] = new ChessPiece()
        {
            Type = "queen",
            Color = white
        };
        chessPieces[7, 4] = new ChessPiece()
        {
            Type = "king",
            Color = white
        };
        chessPieces[7, 5] = new ChessPiece()
        {
            Type = "bishop",
            Color = white
        };
        chessPieces[7, 6] = new ChessPiece()
        {
            Type = "Knight",
            Color = white
        };
        chessPieces[7, 7] = new ChessPiece()
        {
            Type = "rook",
            Color = white
        };
        for (int i = 0; i < chessPieces.GetLength(1); i++)
        {
            chessPieces[6, i] = new ChessPiece()
            {
                Type = "pawn",
                Color = white
            };
        }
        // 2D array of custom object serialization is not supported, need to consult with somebody
        // await _matchService.LoadChessPieces(new Message(){Action = "Load"});
    }

    private async Task HandleClick(int FirstLayer, int SecondLayer)
    {
        Message message = new Message();
        message.FirstLayer = FirstLayer;
        message.SecondLayer = SecondLayer;
        message.Action = "Move";
        ChessPiece selected = await _matchService.MoveChessPiece(message);
        if (selected != null)
        {
            chessPieces[FirstLayer, SecondLayer] = selected;
            Console.WriteLine($"Coordinates old: {selected.OldPosition.ToString()} Coordinates new: {chessPieces[FirstLayer,SecondLayer].NewPosition.ToString()}");
            if(chessPieces[FirstLayer,SecondLayer].OldPosition.VerticalAxis != chessPieces[FirstLayer,SecondLayer].NewPosition.VerticalAxis
            || chessPieces[FirstLayer,SecondLayer].OldPosition.HorizontalAxis != chessPieces[FirstLayer,SecondLayer].NewPosition.HorizontalAxis){
                chessPieces[selected.OldPosition.VerticalAxis, selected.OldPosition.HorizontalAxis] = null;
            }
            for (int i = 0; i < chessPieces.GetLength(0); i++)
            {
                for (int j = 0; j < chessPieces.GetLength(1); j++)
                {
                    if(chessPieces[i,j]!=null){
                        chessPieces[i, j].Selected = false;
                    }
                }
            }
        }


    }


    private async Task UpdateChessPiece()
    {
        
        Message message = new Message();
        message.Action = "Upgrade";
        message.UpgradeSelected = UpgradeSelected;
        Console.WriteLine("method called");
        ChessPiece toUpdate = await _matchService.UpgradeChessPiece(message);
        chessPieces[toUpdate.OldPosition.VerticalAxis, toUpdate.OldPosition.HorizontalAxis] = toUpdate;

    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMatchService _matchService { get; set; }
    }
}
#pragma warning restore 1591
